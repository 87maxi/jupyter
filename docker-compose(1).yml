FROM debian:12-slim



RUN apt-get upgrade

RUN apt-get update && apt-get install -y \
    apt-utils \
    curl wget \
    gzip unzip tar \
    ca-certificates \
    build-essential \
    git \
    psmisc procps \
    locales \
    libssl-dev \
    zlib1g-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libreadline-dev \
    libsqlite3-dev \
    libgdbm-dev \
    libdb5.3-dev \
    libbz2-dev \
    libexpat1-dev \
    liblzma-dev \
    tk-dev \
    libyaml-dev \
    libzmq3-dev \
    ;



RUN useradd -D ${USR}


WORKDIR ${SRC}


USER ${USR}

RUN mkdir -p ${SRC}


###################### start python #########################################################



ARG PYTHON_VERSION=3.11.1

RUN cd ${SRC} \
    && wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
    && tar xzf Python-${PYTHON_VERSION}.tgz

RUN mkdir ${SRC}/python

# build python and remove left-over sources
RUN cd ${SRC}/Python-${PYTHON_VERSION} \
    && ./configure --prefix=${SRC}/python   --enable-loadable-sqlite-extensions \
    && cd ${SRC}/Python-${PYTHON_VERSION} && make && make install \
    && rm ${SRC}/Python-${PYTHON_VERSION}.tgz

RUN ln -s ${SRC}/python/bin/python3.11 ${SRC}/python/bin/python;


ENV PATH="$PATH:${SRC}/python/bin"

RUN pip3.11 install ipython
RUN pip3.11 install jupyter
RUN pip3.11 install numpy
RUN pip3.11 install matplotlib
RUN pip3.11 install bokeh
RUN pip3.11 install plotly
RUN pip3.11 install pandas
RUN pip3.11 install scipy
RUN pip3.11 install injector
RUN pip3.11 install pyzmq


#################### end python #############################################################

##################### start golang ##########################################################
ARG GOLANG_VERSION=1.21.0

RUN cd ${SRC} &&  wget https://go.dev/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz && \
    tar -xzvf go${GOLANG_VERSION}.linux-amd64.tar.gz

RUN rm -rf ${SRC}/go${GOLANG_VERSION}.linux-amd64.tar.gz

ENV  PATH=$PATH:/home/educar/local/go/bin
ENV GOPATH=/home/educar/local/go

RUN   go install github.com/gopherdata/gophernotes@v0.7.5


RUN mkdir -p  ${HOME}/.local/share/jupyter/kernels/gophernotes
RUN cp $(go env GOPATH)/pkg/mod/github.com/gopherdata/gophernotes@v0.7.5/kernel/* ${HOME}/.local/share/jupyter/kernels/gophernotes/;
RUN chmod 766  ${HOME}/.local/share/jupyter/kernels/gophernotes/*
RUN cd ${HOME}/.local/share/jupyter/kernels/gophernotes &&  sed "s|gophernotes|$(go env GOPATH)/bin/gophernotes|" < kernel.json.in > kernel.json;

##################### end golang ##########################################################

##################### start ruby ##########################################################

#no son las mismas versiones la que quedan en el contenedor

ARG LANG=C.UTF-8
ARG RUBY_MAJOR=3.3
ARG RUBY_VERSION=3.3.5

RUN cd ${HOME} &&  wget "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR}/ruby-${RUBY_VERSION}.tar.gz"

RUN tar xzvf ruby-${RUBY_VERSION}.tar.gz
RUN rm -rf ruby-${RUBY_VERSION}.tar.gz


RUN mv ruby-${RUBY_VERSION} local/;
RUN cd local/ruby-${RUBY_VERSION} && ./configure  --prefix=$HOME/local/ruby  && make && make install ;

RUN rm -rf ${SRC}/ruby-${RUBY_VERSION}

ENV PATH=$PATH:/home/educar/local/ruby/bin



RUN gem install rake
RUN gem install ffi
RUN gem install ffi-rzmq
RUN gem install iruby



##################### end ruby ##########################################################

###################### start erlang #####################################################

ARG ERLANG_OTP=25.0


#  https://github.com/erlang/otp/archive/refs/tags/OTP-${ERLANG_OTP}.tar.gz
RUN wget https://github.com/erlang/otp/releases/download/OTP-${ERLANG_OTP}/otp_src_${ERLANG_OTP}.tar.gz

RUN tar xzvf otp_src_${ERLANG_OTP}.tar.gz;

RUN mkdir -p ${SRC}/erlang

RUN  mv  otp_src_${ERLANG_OTP} ${SRC}/erlang


RUN cd  ${SRC}/erlang/otp_src_${ERLANG_OTP}  && \
    ./configure  --without-javac --disable-hipe --enable-builtin-zlib --without-odbc --without-wx --prefix=${SRC}/erlang &&\
    make clean && \
    make -j$(nproc) && \
    make install ;


ENV PATH=$PATH:/home/educar/local/erlang/bin

###################### end erlang #####################################################

#################### start elixir ########################################################
# vesiones de elixir otp
# https://builds.hex.pm/builds/elixir/builds.txt


ARG ELIXIR_VERSION=1.17.0
#ARG OTP_VERSION=25

RUN cd ${SRC}  &&  wget  https://github.com/elixir-lang/elixir/archive/refs/tags/v${ELIXIR_VERSION}.tar.gz && \
    tar xzvf  v${ELIXIR_VERSION}.tar.gz && \
    mv "elixir-$ELIXIR_VERSION"  elixir && \
    cd elixir && \
    make && \
    make install PREFIX="$HOME/local/elixir" \
    ;

ENV PATH=$PATH:/home/educar/local/elixir/bin


RUN cd ${SRC}  && curl -L https://github.com/pprzetacznik/IElixir/archive/refs/heads/master.zip -o ielixir.zip \
    && unzip ielixir.zip -d ielixir_tmp \
    && mv ielixir_tmp/IElixir-master ielixir \
    && rm -rf ielixir_tmp \
    && cd ielixir \
    && mix local.hex --force \
    && mix local.rebar --force \
    && mix deps.get \
    && mix deps.compile \
    #&& MIX_ENV=prod mix install \
    && ./install_script.sh ;



#RUN  mix --version;


#RUN mix test;


#################### end elixir ########################################################


###################### init jupyter ####################################################

RUN iruby register --force;

#RUN jupyter kernel --kernel=ielixir;


###################### end jupyter ######################################################


EXPOSE 8888



#COPY entrypoint.sh /

#ENTRYPOINT [ "/entrypoint.sh" ]

CMD jupyter lab --ip 0.0.0.0 --no-browser --NotebookApp.token='' --NotebookApp.password='' --notebook-dir=/home/maxi/note
